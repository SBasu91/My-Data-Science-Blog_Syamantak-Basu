{
  "hash": "b5a4740fc729a975b2a90f4b815124ac",
  "result": {
    "markdown": "---\ntitle: \"Indian News Headlines Dataset\"\nauthor: \"Syamantak Basu\"\ndate: \"2023-11-05\"\ncategories: [news, code, analysis]\nimage: \"Image2.jpg\"\n---\n\n\nThis is a post with executable code.\n\nFor this post I will be using the Indian News Headlines Dataset, an open-source dataset which is a \"persistent historical archive of noteable events in the Indian subcontinent from start-2001 to q1-2022, recorded in real-time by the journalists of India\" and contains approx 3.6 million headline events. The dataset was prepared by Rohit Kulkarni and is available in the public domain with a CCO 1.0 DEED license (universal).\n\n**The dataset is periodically updated and may be found here**:https://www.kaggle.com/datasets/therohk/india-headlines-news-dataset\n\n**Photo credit**: Markus Spike on Pixabay (https://pixabay.com/photos/newspaper-coffee-vintage-retro-595478/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.csv(\"/Users/syamantakbasu91/Desktop/IS 407 assignments/My Data Science Blog_Syamantak Basu/india-news-headlines.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# I want to explore the correlations between the relationship between the words poverty and digital (with Digital India being a major buzzword since 2014), poverty and farming, and farming and digital. Thereafter I will visualize the correlation through bar graphs.\n\n# Preprocessing the dataset to count word occurrences\nword1 <- 'poverty'\nword2 <- 'digital'\nword3 <- 'farming'\n\ndata$word1_count <- sapply(data$headline_text, function(text) sum(grepl(word1, text, ignore.case = TRUE)))\ndata$word2_count <- sapply(data$headline_text, function(text) sum(grepl(word2, text, ignore.case = TRUE)))\ndata$word3_count <- sapply(data$headline_text, function(text) sum(grepl(word3, text, ignore.case = TRUE)))\n\n# Calculating the correlations between the three words\ncorrelation_word1_word2 <- cor(data$word1_count, data$word2_count)\ncorrelation_word1_word3 <- cor(data$word1_count, data$word3_count)\ncorrelation_word2_word3 <- cor(data$word2_count, data$word3_count)\n\n# Visualizing the correlations\n# Loading the ggplot2 library\nlibrary(ggplot2)\n\ncorrelation_data <- data.frame(\n  Pair = c(\"word1-word2\", \"word1-word3\", \"word2-word3\"),\n  Correlation = c(correlation_word1_word2, correlation_word1_word3, correlation_word2_word3),\n  Word_Pair = c(paste(word1, \"-\", word2), paste(word1, \"-\", word3), paste(word2, \"-\", word3))\n)\n\n# Creating a named vector for custom colors\ncolor_mapping <- setNames(c(\"red\", \"blue\", \"green\"), c(\n  paste(word1, \"-\", word2),\n  paste(word1, \"-\", word3),\n  paste(word2, \"-\", word3)\n))\n\n# Creating a grouped bar chart with actual word pair names in the legend\nggplot(correlation_data, aes(x = Pair, y = Correlation, fill = Word_Pair)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Correlations between Word Pairs\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_fill_manual(values = color_mapping) +\n  guides(fill = guide_legend(title = \"Word Pair\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Finding the top 3 words occurring in the headlines\n# Loading the necessary libraries\n\nlibrary(tidytext)\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\n# Tokenizing the text into words\ndata %>%\n  mutate(headline_text = tolower(headline_text)) %>%  # Converting to lowercase for case insensitivity\n  unnest_tokens(word, headline_text, token = \"words\") %>%\n\n  # Filtering out common stopwords if needed\n  anti_join(stop_words) %>%\n\n  # Counting word occurrences\n  count(word, sort = TRUE) %>%\n\n  # Selecting the top three words\n  head(3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(word)`\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n   word     n\n1    rs 83121\n2 india 76216\n3  govt 73385\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Visualizing the top 3 words as a scatterplot\n# Tokenizing the text into words and counting word occurrences\nword_frequencies <- data %>%\n  mutate(headline_text = tolower(headline_text)) %>%  # Converting to lowercase for case insensitivity\n  unnest_tokens(word, headline_text, token = \"words\") %>%\n  # Filtering out common stopwords if needed\n  anti_join(stop_words) %>%\n  count(word, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(word)`\n```\n:::\n\n```{.r .cell-code}\n# Selecting the top three words\ntop_words <- head(word_frequencies, 3)\n\n# Defining a color palette for the top three words\nword_colors <- c(\"red\", \"blue\", \"green\")\n\n# Creating a scatterplot of the top three words with colors\nggplot(top_words, aes(x = reorder(word, -n), y = n, fill = word)) +\n  geom_point(shape = 21, size = 4) +  # Customizing shape and size of points\n  scale_fill_manual(values = word_colors) +  # Assigning colors to words\n  labs(x = \"Word\", y = \"Frequency\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualizing the top 3 words together with the three custom words of my choosing as a scatterplot\n\n# Defining the additional words\nadditional_words <- c(\"poverty\", \"farming\", \"digital\")\n\n# Filtering and counting the frequencies of the additional words\nadditional_word_frequencies <- data %>%\n  mutate(headline_text = tolower(headline_text)) %>%\n  unnest_tokens(word, headline_text, token = \"words\") %>%\n  filter(word %in% additional_words) %>%\n  count(word, sort = TRUE)\n\n# Combining the top words and additional words\nall_words <- rbind(top_words, additional_word_frequencies)\n\n# Defining a color palette for the words\nword_colors <- c(\"red\", \"blue\", \"green\", \"orange\", \"purple\", \"cyan\")\n\n# Creating a scatterplot of all words with colors\n\nggplot(all_words, aes(x = reorder(word, -n), y = n, fill = word)) +\n  geom_point(shape = 21, size = 4) +\n  scale_fill_manual(values = word_colors) +\n  labs(x = \"Word\", y = \"Frequency\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualizing the occurences of all six words as a histogram\n\nggplot(all_words, aes(x = word, y = n, fill = word)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = word_colors) +  # Assigning colors to the words\n  labs(x = \"Word\", y = \"Frequency\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}